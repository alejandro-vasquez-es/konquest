/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.alejandrov.frontend;

import com.alejandrov.backend.Flota;
import com.alejandrov.backend.jugador.Jugador;
import com.alejandrov.backend.listas.Lista;
import com.alejandrov.backend.listas.ListaException;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author aleja
 */
public class FlotasFrame extends javax.swing.JFrame {

    private DefaultTableModel model;
    private Lista<Flota> flotas;
    private JTable tablaFlotas;
    private int turno;
    private Jugador jugadorActivo;
    private KonquestFrame parent;

    /**
     * Creates new form FlotasFrame
     */
    public FlotasFrame(Lista<Flota> flotas, int turno, Jugador jugadorActivo, KonquestFrame parent) {
        this.turno = turno;
        this.jugadorActivo = jugadorActivo;
        initComponents();
        this.flotas = flotas;
        this.parent = parent;
        try {
            initTabla();
        } catch (ListaException e) {
            e.printStackTrace();
        }
    }

    public void cancelarFlotas() throws ListaException {
        int filas = model.getRowCount();
        for (int i = 0; i < filas; i++) {
            if (model.getValueAt(i, 0).getClass().equals(Boolean.class) && model.getValueAt(i, 0).equals(false)) {
                jugadorActivo.cancelarFlota(flotas.obtenerContenido(i));
            }
        }
        parent.setToolTips();
    }

    public void initTabla() throws ListaException {

        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                try {
                    boolean sonTurnosIguales = turno == flotas.obtenerContenido(row).getTurnoPartida();
                    return (column == 0
                            &&
                            sonTurnosIguales);
                } catch (ListaException e) {
                    e.printStackTrace();
                }
                return false;
            }
        };

        model.addColumn("");
        model.addColumn("NÂ° de flota.");
        model.addColumn("Origen");
        model.addColumn("Destino");
        model.addColumn("naves");
        model.addColumn("porcentaje de muertes");
        model.addColumn("Turno de llegada");

        tablaFlotas = new JTable() {
            @Override
            public Class<?> getColumnClass(int column) {
                    if (column == 0) return Boolean.class;
                return super.getColumnClass(column);
            }
        };
        jScrollPane2.setViewportView(tablaFlotas);

        tablaFlotas.setModel(model);
        tablaFlotas.setRowHeight(22);
        tablaFlotas.getColumnModel().getColumn(5).setPreferredWidth(125);
        tablaFlotas.getColumnModel().getColumn(0).setPreferredWidth(30);


        for (int i = 0; i < flotas.obtenerLongitud(); i++) {

            Flota flota = flotas.obtenerContenido(i);
            String origen = flota.getOrigen().getNombre();
            String destino = flota.getDestino().getNombre();
            int naves = flota.getNaves();
            double porcentajeMuertes = flota.getPorcentajeMuerte();
            int turnoLLegada = flota.getTurnoLlegada();

            model.addRow(new Object[]{true, flota.getNumero(), origen, destino, naves, porcentajeMuertes, turnoLLegada});

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 400));
        setPreferredSize(new java.awt.Dimension(700, 400));
        getContentPane().setLayout(new java.awt.BorderLayout(15, 15));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Consulta de Flotas");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 0, 0, 0));
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton1.setText("Aceptar");
        jButton1.setAlignmentX(1.0F);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        try {
            cancelarFlotas();
        } catch (ListaException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
